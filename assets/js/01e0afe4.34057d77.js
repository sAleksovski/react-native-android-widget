"use strict";(self.webpackChunkreact_native_android_widget_docs=self.webpackChunkreact_native_android_widget_docs||[]).push([[7291],{4060:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>g,frontMatter:()=>d,metadata:()=>o,toc:()=>c});var n=i(5893),r=i(1151);const d={sidebar_position:1},s="Widget Design",o={id:"tutorial/widget-design",title:"Widget Design",description:"This library provides a few primitives that we can use to create widgets.",source:"@site/docs/tutorial/widget-design.md",sourceDirName:"tutorial",slug:"/tutorial/widget-design",permalink:"/react-native-android-widget/docs/tutorial/widget-design",draft:!1,unlisted:!1,editUrl:"https://github.com/sAleksovski/react-native-android-widget/tree/master/docs/docs/tutorial/widget-design.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"default",previous:{title:"Getting Started",permalink:"/react-native-android-widget/docs/"},next:{title:"Widget Preview",permalink:"/react-native-android-widget/docs/tutorial/widget-preview"}},a={},c=[];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"widget-design",children:"Widget Design"}),"\n",(0,n.jsx)(t.p,{children:"This library provides a few primitives that we can use to create widgets."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/react-native-android-widget/docs/primitives/flex-widget",children:"FlexWidget"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/react-native-android-widget/docs/primitives/overlap-widget",children:"OverlapWidget"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/react-native-android-widget/docs/primitives/list-widget",children:"ListWidget"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/react-native-android-widget/docs/primitives/text-widget",children:"TextWidget"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/react-native-android-widget/docs/primitives/image-widget",children:"ImageWidget"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/react-native-android-widget/docs/primitives/icon-widget",children:"IconWidget"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/react-native-android-widget/docs/primitives/svg-widget",children:"SvgWidget"})}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"You can read more about them and their props in their respective pages."}),"\n",(0,n.jsxs)(t.admonition,{title:"Hooks",type:"danger",children:[(0,n.jsxs)(t.p,{children:["Widgets ",(0,n.jsx)(t.strong,{children:"must not"})," use any hooks. They ",(0,n.jsx)(t.strong,{children:"must"})," be functions that return some of the primitives."]}),(0,n.jsxs)(t.p,{children:["We can create custom components, but at the end they must use only the primitives, not ",(0,n.jsx)(t.code,{children:"View"}),", ",(0,n.jsx)(t.code,{children:"Text"}),", or any other React Native component."]}),(0,n.jsx)(t.p,{children:"We can also use conditions, for/map, standard jsx. They cannot be async."})]}),"\n",(0,n.jsx)(t.p,{children:'We\'ll start with a Basic widget that says "Hello".'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",metastring:'title="HelloWidget.tsx"',children:"import React from 'react';\nimport { FlexWidget, TextWidget } from 'react-native-android-widget';\n\nexport function HelloWidget() {\n  return (\n    <FlexWidget\n      style={{\n        height: 'match_parent',\n        width: 'match_parent',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#ffffff',\n        borderRadius: 16,\n      }}\n    >\n      <TextWidget\n        text=\"Hello\"\n        style={{\n          fontSize: 32,\n          fontFamily: 'Inter',\n          color: '#000000',\n        }}\n      />\n    </FlexWidget>\n  );\n}\n"})})]})}function g(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>s});var n=i(7294);const r={},d=n.createContext(r);function s(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);