"use strict";(self.webpackChunkreact_native_android_widget_docs=self.webpackChunkreact_native_android_widget_docs||[]).push([[4483],{3467:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=i(5893),r=i(1151);const a={sidebar_position:1},d="WidgetPreview",o={id:"api/widget-preview",title:"WidgetPreview",description:"react-native-android-widget exports a WidgetPreview component that can be used to preview a widget in any screen in our React Native application.",source:"@site/docs/api/widget-preview.md",sourceDirName:"api",slug:"/api/widget-preview",permalink:"/react-native-android-widget/docs/api/widget-preview",draft:!1,unlisted:!1,editUrl:"https://github.com/sAleksovski/react-native-android-widget/tree/master/docs/docs/api/widget-preview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"default",previous:{title:"Congratulations!",permalink:"/react-native-android-widget/docs/tutorial/congratulations"},next:{title:"registerWidgetTaskHandler",permalink:"/react-native-android-widget/docs/api/register-widget-task-handler"}},s={},c=[{value:"Usage",id:"usage",level:2},{value:"Types",id:"types",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"widgetpreview",children:"WidgetPreview"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"react-native-android-widget"})," exports a ",(0,n.jsx)(t.code,{children:"WidgetPreview"})," component that can be used to preview a widget in any screen in our React Native application."]}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",metastring:'title="HelloWidgetPreviewScreen.tsx"',children:"import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { WidgetPreview } from 'react-native-android-widget';\n\nimport { HelloWidget } from './HelloWidget';\n\nexport function HelloWidgetPreviewScreen() {\n  return (\n    <View style={styles.container}>\n      <WidgetPreview\n        renderWidget={() => <HelloWidget />}\n        width={320}\n        height={200}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"})}),"\n",(0,n.jsx)(t.h2,{id:"types",children:"Types"}),"\n",(0,n.jsxs)(t.p,{children:["Check the types in the ",(0,n.jsx)(t.a,{href:"/react-native-android-widget/docs/public-api/interfaces/WidgetPreviewProps",children:"Public API"})," documentation"]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>d});var n=i(7294);const r={},a=n.createContext(r);function d(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);