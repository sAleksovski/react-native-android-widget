"use strict";(self.webpackChunkreact_native_android_widget_docs=self.webpackChunkreact_native_android_widget_docs||[]).push([[9239],{108:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var c=i(5893),d=i(1151);const t={sidebar_position:5,sidebar_label:"Handling Clicks"},s="Handling Clicks",o={id:"handling-clicks",title:"Handling Clicks",description:"All widget primitives can be clicked, and execute some code.",source:"@site/docs/handling-clicks.md",sourceDirName:".",slug:"/handling-clicks",permalink:"/react-native-android-widget/docs/handling-clicks",draft:!1,unlisted:!1,editUrl:"https://github.com/sAleksovski/react-native-android-widget/tree/master/docs/docs/handling-clicks.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Handling Clicks"},sidebar:"default",previous:{title:"Update Widget",permalink:"/react-native-android-widget/docs/update-widget"},next:{title:"Demo",permalink:"/react-native-android-widget/docs/demo"}},r={},a=[{value:"Special cases",id:"special-cases",level:2},{value:"Demo",id:"demo",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.a)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"handling-clicks",children:"Handling Clicks"}),"\n",(0,c.jsxs)(n.p,{children:["All widget ",(0,c.jsx)(n.a,{href:"./primitives/index",children:"primitives"})," can be clicked, and execute some code."]}),"\n",(0,c.jsxs)(n.p,{children:["To add a click action to ",(0,c.jsx)(n.code,{children:"FlexWidget"}),", we need to pass a ",(0,c.jsx)(n.code,{children:"clickAction"})," prop, and an optional ",(0,c.jsx)(n.code,{children:"clickActionData"})," prop. ",(0,c.jsx)(n.code,{children:"clickActionData"})," can be used to add additional data that we need."]}),"\n",(0,c.jsx)(n.admonition,{type:"warning",children:(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"clickAction"})," only works on Android 7 and up"]})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-tsx",children:"import { FlexWidget } from 'react-native-android-widget';\n\nexport function MyWidget() {\n  return (\n    <FlexWidget clickAction=\"MY_ACTION\" clickActionData={{ id: 0 }}>\n      ...\n    </FlexWidget>\n  );\n}\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Inside our ",(0,c.jsx)(n.a,{href:"/react-native-android-widget/docs/api/register-widget-task-handler",children:"registerWidgetTaskHandler"})," handler we can check for the ",(0,c.jsx)(n.code,{children:"widgetAction"}),", and if the ",(0,c.jsx)(n.code,{children:"widgetAction"})," is ",(0,c.jsx)(n.code,{children:"WIDGET_CLICK"}),", ",(0,c.jsx)(n.code,{children:"props.clickAction"})," will be the ",(0,c.jsx)(n.code,{children:"clickAction"})," we set to the View."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"export async function widgetTaskHandler(props: WidgetTaskHandlerProps) {\n  switch (props.widgetAction) {\n    case 'WIDGET_ADDED':\n      // ...;\n      break;\n\n    case 'WIDGET_UPDATE':\n      // ...;\n      break;\n\n    case 'WIDGET_RESIZED':\n      // ...;\n      break;\n\n    case 'WIDGET_DELETED':\n      // ...;\n      break;\n\n    case 'WIDGET_CLICK':\n      if (props.clickAction === 'MY_ACTION') {\n        // Do stuff when primitive with `clickAction=\"MY_ACTION\"` is clicked\n        // props.clickActionData === { id: 0 }\n      }\n      break;\n\n    default:\n      break;\n  }\n}\n"})}),"\n",(0,c.jsx)(n.h2,{id:"special-cases",children:"Special cases"}),"\n",(0,c.jsxs)(n.p,{children:["There are a few special values for ",(0,c.jsx)(n.code,{children:"clickAction"})," that will not emit the action,\nbut will execute the action in the background."]}),"\n",(0,c.jsx)(n.p,{children:"Those are:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.code,{children:'"OPEN_APP"'})}),"\n",(0,c.jsxs)(n.p,{children:["This ",(0,c.jsx)(n.code,{children:"clickAction"})," does not required ",(0,c.jsx)(n.code,{children:"clickActionData"}),", and if set on a section of\nthe widget it will open the application when clicked"]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.code,{children:'"OPEN_URI"'})}),"\n",(0,c.jsxs)(n.p,{children:["This ",(0,c.jsx)(n.code,{children:"clickAction"})," requires a ",(0,c.jsx)(n.code,{children:"clickActionData"})," that contains ",(0,c.jsx)(n.code,{children:"{ uri: 'some-uri' }"}),".\nThe ",(0,c.jsx)(n.code,{children:"uri"})," can be a web uri (",(0,c.jsx)(n.code,{children:"https://google.com"}),"), or an app deep link (",(0,c.jsx)(n.code,{children:"androidwidgetexample://deep-link"}),")"]}),"\n",(0,c.jsx)(n.p,{children:"For the deep link to open a screen in the app deep linking must be set up using:"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"https://reactnative.dev/docs/linking",children:"Linking"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"https://docs.expo.dev/guides/linking/",children:"Expo Linking"})}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.a,{href:"https://expo.github.io/router/docs/features/linking",children:"Expo Router"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h2,{id:"demo",children:"Demo"}),"\n",(0,c.jsxs)(n.p,{children:["All click action types are presend in the ",(0,c.jsx)(n.a,{href:"/react-native-android-widget/docs/demo#click-demo-widget-preview",children:"Click Demo"})," widget in the demo app."]})]})}function h(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>o,a:()=>s});var c=i(7294);const d={},t=c.createContext(d);function s(e){const n=c.useContext(t);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),c.createElement(t.Provider,{value:n},e.children)}}}]);