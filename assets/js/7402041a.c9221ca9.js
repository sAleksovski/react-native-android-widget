"use strict";(self.webpackChunkreact_native_android_widget_docs=self.webpackChunkreact_native_android_widget_docs||[]).push([[9557],{6035:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var d=i(5893),n=i(1151);const a={sidebar_position:4,sidebar_label:"Update Widget"},r="Update Widget",s={id:"update-widget",title:"Update Widget",description:"There are two ways to update a widget once it is added on the home screen.",source:"@site/docs/update-widget.md",sourceDirName:".",slug:"/update-widget",permalink:"/react-native-android-widget/docs/update-widget",draft:!1,unlisted:!1,editUrl:"https://github.com/sAleksovski/react-native-android-widget/tree/master/docs/docs/update-widget.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Update Widget"},sidebar:"default",previous:{title:"SvgWidget",permalink:"/react-native-android-widget/docs/primitives/svg-widget"},next:{title:"Handling Clicks",permalink:"/react-native-android-widget/docs/handling-clicks"}},o={},c=[{value:"updatePeriodMillis",id:"updateperiodmillis",level:2},{value:"requestWidgetUpdate",id:"requestwidgetupdate",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h1,{id:"update-widget",children:"Update Widget"}),"\n",(0,d.jsx)(t.p,{children:"There are two ways to update a widget once it is added on the home screen."}),"\n",(0,d.jsx)(t.h2,{id:"updateperiodmillis",children:"updatePeriodMillis"}),"\n",(0,d.jsxs)(t.p,{children:["Schedule updates using ",(0,d.jsx)(t.code,{children:"android:updatePeriodMillis"})," (or ",(0,d.jsx)(t.code,{children:"updatePeriodMillis"})," with Expo)"]}),"\n",(0,d.jsxs)(t.p,{children:["When using this option, the ",(0,d.jsx)(t.code,{children:"widgetTaskHandler"})," function will be called with ",(0,d.jsx)(t.code,{children:"widgetAction = 'WIDGET_UPDATE'"}),", and you can use it to update the widget."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-js",metastring:'title="widget-task-handler.tsx"',children:"export async function widgetTaskHandler(props: WidgetTaskHandlerProps) {\n\n  switch (props.widgetAction) {\n    ...\n\n    case 'WIDGET_UPDATE':\n      props.renderWidget(<Widget />);\n      break;\n\n    ...\n  }\n}\n"})}),"\n",(0,d.jsx)(t.admonition,{title:"Note",type:"info",children:(0,d.jsx)(t.p,{children:"Updates requested with updatePeriodMillis will not be delivered more than once every 30 minutes."})}),"\n",(0,d.jsxs)(t.p,{children:["More details about ",(0,d.jsx)(t.code,{children:"updatePeriodMillis"})," on the ",(0,d.jsx)(t.a,{href:"https://developer.android.com/reference/android/appwidget/AppWidgetProviderInfo.html#updatePeriodMillis",children:"official documentation"}),"."]}),"\n",(0,d.jsx)(t.h2,{id:"requestwidgetupdate",children:"requestWidgetUpdate"}),"\n",(0,d.jsxs)(t.p,{children:["You can call ",(0,d.jsx)(t.a,{href:"/react-native-android-widget/docs/api/request-widget-update",children:(0,d.jsx)(t.code,{children:"requestWidgetUpdate"})})," any time when your app is open as a result of some user action, and request a widget update."]})]})}function p(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>s,a:()=>r});var d=i(7294);const n={},a=d.createContext(n);function r(e){const t=d.useContext(a);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),d.createElement(a.Provider,{value:t},e.children)}}}]);