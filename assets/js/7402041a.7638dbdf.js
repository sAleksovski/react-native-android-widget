"use strict";(self.webpackChunkreact_native_android_widget_docs=self.webpackChunkreact_native_android_widget_docs||[]).push([[9557],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=l(n),g=i,m=u["".concat(p,".").concat(g)]||u[g]||c[g]||a;return n?r.createElement(m,d(d({ref:t},s),{},{components:n})):r.createElement(m,d({ref:t},s))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,d=new Array(a);d[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,d[1]=o;for(var l=2;l<a;l++)d[l]=n[l];return r.createElement.apply(null,d)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8415:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:4,sidebar_label:"Update Widget"},d="Update Widget",o={unversionedId:"update-widget",id:"update-widget",title:"Update Widget",description:"There are two ways to update a widget once it is added on the home screen.",source:"@site/docs/update-widget.md",sourceDirName:".",slug:"/update-widget",permalink:"/react-native-android-widget/docs/update-widget",draft:!1,editUrl:"https://github.com/sAleksovski/react-native-android-widget/tree/master/docs/docs/update-widget.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Update Widget"},sidebar:"default",previous:{title:"SvgWidget",permalink:"/react-native-android-widget/docs/primitives/svg-widget"},next:{title:"Handling Clicks",permalink:"/react-native-android-widget/docs/handling-clicks"}},p={},l=[{value:"updatePeriodMillis",id:"updateperiodmillis",level:2},{value:"requestWidgetUpdate",id:"requestwidgetupdate",level:2}],s={toc:l};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"update-widget"},"Update Widget"),(0,i.kt)("p",null,"There are two ways to update a widget once it is added on the home screen."),(0,i.kt)("h2",{id:"updateperiodmillis"},"updatePeriodMillis"),(0,i.kt)("p",null,"Schedule updates using ",(0,i.kt)("inlineCode",{parentName:"p"},"android:updatePeriodMillis")," (or ",(0,i.kt)("inlineCode",{parentName:"p"},"updatePeriodMillis")," with Expo)"),(0,i.kt)("p",null,"When using this option, the ",(0,i.kt)("inlineCode",{parentName:"p"},"widgetTaskHandler")," function will be called with ",(0,i.kt)("inlineCode",{parentName:"p"},"widgetAction = 'WIDGET_UPDATE'"),", and you can use it to update the widget."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="widget-task-handler.tsx"',title:'"widget-task-handler.tsx"'},"export async function widgetTaskHandler(props: WidgetTaskHandlerProps) {\n\n  switch (props.widgetAction) {\n    ...\n\n    case 'WIDGET_UPDATE':\n      props.renderWidget(<Widget />);\n      break;\n\n    ...\n  }\n}\n")),(0,i.kt)("admonition",{title:"Note",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Updates requested with updatePeriodMillis will not be delivered more than once every 30 minutes.")),(0,i.kt)("p",null,"More details about ",(0,i.kt)("inlineCode",{parentName:"p"},"updatePeriodMillis")," on the ",(0,i.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/appwidget/AppWidgetProviderInfo.html#updatePeriodMillis"},"official documentation"),"."),(0,i.kt)("h2",{id:"requestwidgetupdate"},"requestWidgetUpdate"),(0,i.kt)("p",null,"You can call ",(0,i.kt)("a",{parentName:"p",href:"/react-native-android-widget/docs/api/request-widget-update"},(0,i.kt)("inlineCode",{parentName:"a"},"requestWidgetUpdate"))," any time when your app is open as a result of some user action, and request a widget update."))}c.isMDXComponent=!0}}]);